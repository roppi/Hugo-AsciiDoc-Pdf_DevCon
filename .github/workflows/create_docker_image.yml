# This is a basic workflow to help you get started with Actions
name: CreateDockerImage

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths: .devcontainer/Dockerfile
  pull_request:
    paths: .devcontainer/Dockerfile

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2.1.1

    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }} # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_PASSWORD }} # optional
        # Server address of Docker registry. If not set then will default to Docker Hub
        #registry: docker.io # optional
        # Docker repository to tag the image with
        repository: roppi/rc_hugo
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        #tags: latest# optional
        # Automatically tags the built image with the git reference as per the readme
        tag_with_ref: true # optional
        # Automatically tags the built image with the git short SHA as per the readme
        #tag_with_sha: # optional
        # Path to the build context
        #path: # optional, default is .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: .devcontainer/Dockerfile # optional
        # Sets the target stage to build
        #target: # optional
        # Always attempt to pull a newer version of the image
        #always_pull: # optional
        # Comma-delimited list of build-time variables
        #build_args: # optional
        # Comma-delimited list of images to consider as cache sources
        #cache_froms: # optional
        # Comma-delimited list of labels to add to the built image
        #labels: # optional
        # Adds labels with git repository information to the built image
        add_git_labels: true # optional
        # Whether to push the image
        #push: # optional, default is true
